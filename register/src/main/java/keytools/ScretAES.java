package keytools;


import jsonreader.tools.GzipGetteer;
import org.apache.commons.codec.binary.Base64;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import java.security.spec.AlgorithmParameterSpec;

/**
 * @program: protool
 * @description: 对aes加密算法进行操作的工具类
 * @author: Mr.gao
 * @create: 2018-09-08 11:48
 **/
public class ScretAES  {

    public static String scretKey = "eagleye_9fd&fwfl";
    public static byte[] bytes = {(byte) 0, (byte) 1, (byte) 2, (byte) 3, (byte) 4, (byte) 5, (byte) 6, (byte) 7, (byte) 8, (byte) 9, (byte) 10, (byte) 11, (byte) 12, KeyParam.k, KeyParam.l, KeyParam.m};
    public static byte[] encryptCodeWithCFB(String plainText){
        Key secretKey = new SecretKeySpec(scretKey.getBytes(),"AES");
        AlgorithmParameterSpec ivParameterSpec = new IvParameterSpec(bytes);
        try {
            Cipher cipher = Cipher.getInstance("AES/CFB/NoPadding");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey,ivParameterSpec);
            byte[] p = plainText.getBytes("UTF-8");
            byte[] result = cipher.doFinal(p);

            return result;
        } catch (Exception e) {
            throw new RuntimeException(e);
            //return null;
        }

    }

    public static byte[] decryptCodeWithCFB(byte[] plainText){
        Key secretKeySpec = new SecretKeySpec(scretKey.getBytes(), "AES");
        AlgorithmParameterSpec ivParameterSpec = new IvParameterSpec(bytes);
        Cipher instance = null;
        try {
            instance = Cipher.getInstance("AES/CFB/NoPadding ");
            instance.init(Cipher.DECRYPT_MODE, secretKeySpec, ivParameterSpec);
            byte[] result = instance.doFinal(plainText);
            return result;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void main(String[]args){
        String youCanBelieve ="";
        byte[] ouye = Base64.decodeBase64(youCanBelieve);
        System.out.println(youCanBelieve.getBytes().length);
        System.out.println(ouye.length);
        ouye= decryptCodeWithCFB(ouye);
        System.out.println(ouye.length);
        String string = GzipGetteer.uncompressToString(ouye);
        System.out.println(string);
        //System.out.println(Cipher.);
//        byte[] ouye = encryptCodeWithCFB("呵呵哒哒，你能成功吗");
//        String buff = new String(ouye);
//        System.out.println(ouye);
//        System.out.println(buff);
//        byte[] result = decryptCodeWithCFB(ouye);
//        String resultString = new String(result);
//        System.out.println(result);
//        System.out.println(resultString);
    }
}
